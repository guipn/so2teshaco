<!-- Documentation generated by CDoc ( https://github.com/guipn/CDoc/ ) -->
<html>
<head>
    <title>teshaco Documentation: io.c</title>
    <link rel="stylesheet" type="text/css" href="style.css"></link>
</head>
<body>
    <h1><a href="index.htm">teshaco</a>: io.c</h1>
    
    <hr/>
    <h2>Files included</h2>
    <em>io.h</em><br/>
    <em>fcntl.h</em><br/>
    <em>stdio.h</em><br/>
        <br/>
    <br/>

    
    <h2>Function Summary</h2>
        <a href="#handle_pipe;"><h3>handle_pipe;</h3></a> <ShortDescription> <br/>
    <a href="#redirect_io;"><h3>redirect_io;</h3></a> <ShortDescription> <br/>

    <p/>
    <hr/>
        <h2><a name="handle_pipe;">void handle_pipe(int cmdindex, int lastindex, int *pipefd);</h2>
    Chama dup2 da forma necessaria dependendo do indice do comando sendo
processado. lastindex eh o indice do ultimo comando da lista sendo 
processada.<ReturnsDescription>
    <p/>
    <br/>
    <br/>
    <h2><a name="redirect_io;">$void redirect_io(char **tokenized);</h2>
    Se necessario, redireciona stdin/stdout/stderr para este processo.
Eh chamada por main.c:call_exec para configurar io.
Retorna 0 se nao houve redirecionamento, e 1 caso contrario. Isto eh
necessario para que call_exec saiba se deve chamar free para os 
argumentos de redirecionamento, para que eles nao interfiram na substituicao
pelo novo processo; se isto nao for feito, os argumentos de redirecionamento
sao considerados como argumentos para a invocacao do novo processo.<ReturnsDescription>
    <p/>
    <br/>
    <br/>


    <div id="footer"><a href="http://code.google.com/p/teshaco/">teshaco</a>, version 0, by <a href="http://guipn.com">Guilherme P. Nami</a></div>
</body>
</html>
