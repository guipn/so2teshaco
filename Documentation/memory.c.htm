<!-- Documentation generated by CDoc ( https://github.com/guipn/CDoc/ ) -->
<html>
<head>
    <title>teshaco Documentation: memory.c</title>
    <link rel="stylesheet" type="text/css" href="style.css"></link>
</head>
<body>
    <h1><a href="index.htm">teshaco</a>: memory.c</h1>
    
    <hr/>
    <h2>Files included</h2>
    <em>jobs.h</em><br/>
    <em>stdio.h</em><br/>
        <br/>
    <br/>

    
    <h2>Function Summary</h2>
        <a href="#error;"><h3>error;</h3></a> <ShortDescription> <br/>
    <a href="#_malloc;"><h3>_malloc;</h3></a> <ShortDescription> <br/>
    <a href="#_realloc;"><h3>_realloc;</h3></a> <ShortDescription> <br/>
    <a href="#release_resources"><h3>release_resources</h3></a> <ShortDescription> <br/>

    <p/>
    <hr/>
        <h2><a name="error;">static void error(char *msg);</h2>
    Exibe a mensagem de erro dada e chama exit(EXIT_FAILURE).<ReturnsDescription>
    <p/>
    <br/>
    <br/>
    <h2><a name="_malloc;">void *_malloc(size_t size);</h2>
    Automatiza a alocacao com checagem de erro. Caso malloc retorne
NULL, mostra uma mensagem de erro e aborta a execucao.<ReturnsDescription>
    <p/>
    <br/>
    <br/>
    <h2><a name="_realloc;">void *_realloc(void *orig, size_t new_size);</h2>
    Implementa comportamento analogo ao de _malloc.<ReturnsDescription>
    <p/>
    <br/>
    <br/>
    <h2><a name="release_resources">void release_resources(void);</h2>
    Libera recursos persistentes alocados pelo shell durante sua
execucao.<ReturnsDescription>
    <p/>
    <br/>
    <br/>


    <div id="footer"><a href="http://code.google.com/p/teshaco/">teshaco</a>, version 0, by <a href="http://guipn.com">Guilherme P. Nami</a></div>
</body>
</html>
